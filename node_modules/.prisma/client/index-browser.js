
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 3.10.0
 * Query Engine version: 73e60b76d394f8d37d8ebd1f8918c79029f0db86
 */
Prisma.prismaVersion = {
  client: "3.10.0",
  engine: "73e60b76d394f8d37d8ebd1f8918c79029f0db86"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = 'DbNull'
Prisma.JsonNull = 'JsonNull'
Prisma.AnyNull = 'AnyNull'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.Tbl_imgScalarFieldEnum = makeEnum({
  id: 'id',
  file_type: 'file_type',
  file_size: 'file_size',
  dimension_x: 'dimension_x',
  dimension_y: 'dimension_y',
  purity: 'purity',
  category: 'category',
  path: 'path',
  url: 'url',
  source: 'source',
  colors: 'colors',
  desc: 'desc',
  created_time: 'created_time',
  create_at: 'create_at',
  update_at: 'update_at'
});

exports.Prisma.Tbl_img_extScalarFieldEnum = makeEnum({
  id: 'id',
  views: 'views',
  favorites: 'favorites',
  ratio: 'ratio',
  tags: 'tags',
  author_name: 'author_name',
  author_id: 'author_id',
  artist_name: 'artist_name',
  artist_id: 'artist_id',
  create_at: 'create_at',
  update_at: 'update_at'
});

exports.Prisma.Tbl_authorScalarFieldEnum = makeEnum({
  name: 'name',
  id: 'id',
  desc: 'desc',
  type: 'type',
  create_at: 'create_at',
  update_at: 'update_at'
});

exports.Prisma.Tbl_tagScalarFieldEnum = makeEnum({
  name: 'name',
  alias: 'alias',
  id: 'id',
  category_id: 'category_id',
  category: 'category',
  create_at: 'create_at',
  update_at: 'update_at'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  tbl_img: 'tbl_img',
  tbl_img_ext: 'tbl_img_ext',
  tbl_author: 'tbl_author',
  tbl_tag: 'tbl_tag'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
